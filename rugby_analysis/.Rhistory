teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("super", tournament_name, ignore.case = TRUE) & season == "2020")
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(tournament, " ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read.csv2("tournaments.csv",
col.names = c("tournament_id", "tournament_name", "season", "geolocation"))
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read.csv2("tournaments.csv")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read.csv2("tournaments.csv", header = TRUE, sep = ",")
# Get team information
team_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
team_name <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_text()  %>% str_trim()
tournament_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-tournaments")
teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("super", tournament_name, ignore.case = TRUE) & season == "2020")
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
library(readr)
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv2("tournaments.csv", header = TRUE, sep = ",")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv2("tournaments.csv")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv2("tournaments.csv", delim = ",")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv("tournaments.csv", delim = ",")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv("tournaments.csv", col_names = TRUE)
# Get team information
team_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
team_name <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_text()  %>% str_trim()
tournament_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-tournaments")
teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("super", tournament_name, ignore.case = TRUE) & season == "2020")
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read_csv("tournaments.txt", col_names = TRUE)
tournaments <- read.table("tournaments.txt", sep = "\t", header = TRUE, fileEncoding = "UTF-16LE")
tournaments <- read.table("tournaments.txt", sep = "\t", header = TRUE)
View(tournaments)
View(tournaments)
# Get team information
team_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
team_name <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_text()  %>% str_trim()
tournament_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-tournaments")
teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("super", tournament_name, ignore.case = TRUE) & season == "2020")
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
tournaments <- read.csv2("tournaments.csv", header = TRUE, sep = "")
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
season <- read.csv2("tournaments.csv", header = TRUE, sep = "")
View(season)
View(season)
# Get tournament information
# tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
# tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
# tournaments <- as.data.frame(cbind(tournament_id, tournament_name, season))
season <- read.csv("tournaments.csv")
# Get tournament information
tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
tournaments <- as.data.frame(cbind(tournament_id, tournament_name))
View(tournaments)
View(tournaments)
View(season)
View(season)
# Get tournament information
tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
tournament_season <- read.csv("tournament_season.csv")
tournaments <- as.data.frame(cbind(tournament_id, tournament_name))
tournaments <- left_join(tournaments, season, by "tournament_id")
tournaments <- left_join(tournaments, season, by="tournament_id")
tournament_season$tournament_id <- as.character(tournament_season$tournament_id)
tournaments <- left_join(tournaments, tournament_season, by = "tournament_id")
# Get tournament information
tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
tournament_season <- read.csv("tournament_season.csv")
tournament_season$tournament_id <- as.character(tournament_season$tournament_id)
tournaments <- as.data.frame(cbind(tournament_id, tournament_name))
tournaments <- left_join(tournaments, tournament_season, by = c("tournament_id", "tournament_name"))
# Get tournament information
tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
tournament_season <- read.csv("tournament_season.csv")
tournament_season$tournament_id <- as.character(tournament_season$tournament_id)
tournaments <- as.data.frame(cbind(tournament_id, tournament_name))
tournaments <- left_join(tournaments, tournament_season, by = c("tournament_id"))
tournaments <- tournaments %>% select(tournament_id, tournament_name.x, season, geolocation)
colnames(tournaments) <- c("tournament_id", "tournament_name", "season", "geolocation")
# Get team information
team_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
team_name <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_text()  %>% str_trim()
tournament_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-tournaments")
teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("super", tournament_name, ignore.case = TRUE) & season == "2020")
View(df)
View(df)
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
print(URL)
}
# Get player information
players <- data.frame()
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
# call player name function()
players_temp <- player_name(URL)
# Emtpy dataframe for loop
p_bio <- data.frame()
for (player_row in 1:nrow(players_temp)) {
id <- players_temp[player_row, "player_id"]
name <- players_temp[player_row, "player_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/", name)
# call player bio function
p_bio_tmp <- player_bio(URL)
p_bio_tmp <- as.data.frame(t(append(p_bio_tmp, id, 0)))
if(length(p_bio_tmp) == 1){
colnames(p_bio_tmp) <- "player_id"
} else {
colnames(p_bio_tmp) <- c("player_id", "position", "height_m", "weight_kg", "dob_ymd")
}
# collate rows
p_bio <- bind_rows(p_bio, p_bio_tmp)
}
p_bio$tournament_id <- as.list(df[tournament_row, "tournament_id"])
p_bio$team_id <- as.list(df[tournament_row, "team_id"])
p_bio$season <- as.list(df[tournament_row, "season"])
players_temp <- left_join(players_temp, p_bio, by = "player_id")
players <- rbind(players, players_temp)
}
View(players)
View(players)
View(players_temp)
View(players_temp)
View(p_bio_tmp)
View(p_bio_tmp)
View(p_bio)
View(p_bio)
library(robotstxt)
library(rvest)
library(selectr)
library(xml2)
library(dplyr)
library(stringr)
library(forcats)
library(magrittr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(tibble)
library(purrr)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("rugby_pass_scrape_functions.R")
paths_allowed(paths = "https://index.rugbypass.com/")
rPass <- read_html("https://index.rugbypass.com/")
# Get tournament information
tournament_id <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
tournament_name <- rPass %>% html_nodes("#tournaments-drop-down") %>% html_nodes("li") %>% html_text() %>% str_trim()
tournament_season <- read.csv("tournament_season.csv")
tournament_season$tournament_id <- as.character(tournament_season$tournament_id)
tournaments <- as.data.frame(cbind(tournament_id, tournament_name))
tournaments <- left_join(tournaments, tournament_season, by = c("tournament_id"))
tournaments <- tournaments %>% select(tournament_id, tournament_name.x, season, geolocation)
colnames(tournaments) <- c("tournament_id", "tournament_name", "season", "geolocation")
# Get team information
team_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-value")
team_name <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_text()  %>% str_trim()
tournament_id <- rPass %>% html_nodes("#teams-drop-down") %>% html_nodes("li") %>% html_attr(name="data-tournaments")
teams <- as.data.frame(cbind(team_id, team_name, tournament_id))
teams <- separate_rows(teams, tournament_id)
df <- left_join(teams, tournaments, by = "tournament_id")
df <- df[complete.cases(df),]
df <- df[, c("season", "tournament_id", "tournament_name", "team_id", "team_name")] %>%
subset(grepl("aotearoa", tournament_name, ignore.case = TRUE) & season == "2020")
# Get player information
players <- data.frame()
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
# call player name function()
players_temp <- player_name(URL)
# Emtpy dataframe for loop
p_bio <- data.frame()
for (player_row in 1:nrow(players_temp)) {
id <- players_temp[player_row, "player_id"]
name <- players_temp[player_row, "player_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/", name)
# call player bio function
p_bio_tmp <- player_bio(URL)
p_bio_tmp <- as.data.frame(t(append(p_bio_tmp, id, 0)))
if(length(p_bio_tmp) == 1){
colnames(p_bio_tmp) <- "player_id"
} else {
colnames(p_bio_tmp) <- c("player_id", "position", "height_m", "weight_kg", "dob_ymd")
}
# collate rows
p_bio <- bind_rows(p_bio, p_bio_tmp)
}
p_bio$tournament_id <- as.list(df[tournament_row, "tournament_id"])
p_bio$team_id <- as.list(df[tournament_row, "team_id"])
p_bio$season <- as.list(df[tournament_row, "season"])
players_temp <- left_join(players_temp, p_bio, by = "player_id")
players <- rbind(players, players_temp)
}
# Cleaning
players <- players %>% select(season, tournament_id, team_id, player_id, player_name, position, dob_ymd, height_m, weight_kg)
players$weight_kg <- players$weight_kg %>% str_replace("kg", "")
players$height_m <- players$height_m %>% str_replace("m", "")
players <- na_if(players, "")
players <- na_if(players, "---")
players$height_m <- as.double(players$height_m)
players$weight_kg <- as.integer(players$weight_kg)
players$dob_ymd <- as.Date(players$dob_ymd, format = "%d %b %Y")
View(players)
View(players)
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(), user="oli", password="zxc123", host="localhost")
con <- dbConnect(MySQL(), user="oli", password="zxc123", dbname="rugby_analysis", host="localhost")
dbListTables(con)
View(p_bio)
View(p_bio)
View(players)
View(players)
View(teams)
View(teams)
View(tournaments)
View(tournaments)
db_connection <- dbConnect(MySQL(), user="oli", password="zxc123", dbname="rugby_analysis", host="localhost")
dbCreateTable(db_connection, "tournaments", tournaments)
dbReadTable(db_connection, "tournaments")
dbCreateTable(db_connection, "tournaments", tournaments, append = TRUE)
dbWriteTable(db_connection, "tournaments", tournaments, append = TRUE)
dbWriteTable(db_connection, "tournaments", value=tournaments, append = TRUE)
dbWriteTable(db_connection, "tournaments", value=tournaments, append = TRUE, row.names=NULL)
dbWriteTable(db_connection, "tournaments", value=tournaments, append = TRUE, row.names=TRUE)
dbCreateTable(db_connection, "tournaments", tournaments, append = TRUE)
query <- "CREATE TABLE tournaments (
tournament_id TEXT
, tournament_name TEXT
, season TEXT
, geolocation TEXT
);"
#Send the query to MySQL for execution
results <- dbSendQuery(db_connection, query)
dbClearResult(results)
dbWriteTable(db_connection, value = tournaments, row.names = FALSE, name = "tournaments", append = TRUE)
team_query <- "CREATE TABLE teams (
team_id TEXT
, team_name TEXT
, tournament_id TEXT
);"
results <- dbSendQuery(db_connection, team_query)
dbClearResult(results)
dbWriteTable(db_connection, value = teams, row.names = FALSE, name = "teams", append = TRUE)
colnames(players)
player_query <- "CREATE TABLE players (
season TEXT
, tournament_id TEXT
, team_id TEXT
, player_id TEXT
, player_name TEXT
, position TEXT
, dob_ymd DATE
, height_m DOUBLE
, weight_kg INT
PRIMARY KEY (season, tournament_id, team_id, player_id)
);"
results <- dbSendQuery(db_connection, player_query)
player_query <- "CREATE TABLE players (
season TEXT
, tournament_id TEXT
, team_id TEXT
, player_id TEXT
, player_name TEXT
, position TEXT
, dob_ymd DATE
, height_m DOUBLE
, weight_kg INT
);"
results <- dbSendQuery(db_connection, player_query)
dbClearResult(results)
dbWriteTable(db_connection, value = players, row.names = FALSE, name = "players", append = TRUE)
dbWriteTable(db_connection, "players", players)
df_unlist<-function(df){
df<-as.data.frame(df)
nr<-nrow(df)
c.names<-colnames(df)
lscols<-as.vector(which(apply(df,2,is.list)==TRUE))
if(length(lscols)!=0){
for(i in lscols){
temp<-as.vector(unlist(df[,i]))
if(length(temp)!=nr){
adj<-nr-length(temp)
temp<-c(rep(0,adj),temp)
}
df[,i]<-temp
} #end for
df<-as.data.frame(df)
colnames(df)<-c.names
}
return(df)
}
player_new<-df_unlist(players)
View(player_new)
players$dob_ymd <- as.character(players$dob_ymd)
players$dob_ymd <- as.character(players$dob_ymd)
View(players)
View(players)
player_query <- "CREATE TABLE players (
season TEXT
, tournament_id TEXT
, team_id TEXT
, player_id TEXT
, player_name TEXT
, position TEXT
, dob_ymd DATE
, height_m DOUBLE
, weight_kg INT
);"
results <- dbSendQuery(db_connection, player_query)
results <- dbSendQuery(db_connection, player_query)
dbClearResult(results)
dbWriteTable(db_connection, value = players, row.names = FALSE, name = "players", append = TRUE)
View(players)
View(player_new)
player_query <- "CREATE TABLE players (
season TEXT
, tournament_id TEXT
, team_id TEXT
, player_id TEXT
, player_name TEXT
, position TEXT
, dob_ymd TEXT
, height_m DOUBLE
, weight_kg INT
);"
results <- dbSendQuery(db_connection, player_query)
dbClearResult(results)
dbWriteTable(db_connection, value = players, row.names = FALSE, name = "players", append = TRUE)
dbWriteTable(db_connection, value = player_new, row.names = FALSE, name = "players", append = TRUE)
dbWriteTable(db_connection, "players", players)
dbReadTable(db_connection, "players")
dbWriteTable(db_connection, "players", players)
unlist(players$dob_ymd)
players$dob_ymd <- unlist(as.Date(players$dob_ymd, format = "%d %b %Y"))
db_connection <- dbConnect(MySQL(), user="oli", password="zxc123", dbname="rugby_analysis", host="localhost")
dbWriteTable(db_connection, "players", players)
dbWriteTable(db_connection, "players", players)
dbWriteTable(db_connection, "tournaments", tournaments)
dbWriteTable(db_connection, "teams", teams)
colnames
colnames(players)
players$season <- unlist(players$season)
dbWriteTable(db_connection, "players", players)
dbWriteTable(db_connection, "players", players)
players$tournament_id <- unlist(players$tournament_id)
dbWriteTable(db_connection, "players", players)
dbWriteTable(db_connection, "players", players)
players$team_id <- unlist(players$team_id)
dbWriteTable(db_connection, "players", players)
# Get player information
players <- data.frame()
for (tournament_row in 1:nrow(df)) {
tournament <- df[tournament_row, "tournament_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
team <- df[tournament_row, "team_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/all/7-days/high-to-low/players/")
# call player name function()
players_temp <- player_name(URL)
# Emtpy dataframe for loop
p_bio <- data.frame()
for (player_row in 1:nrow(players_temp)) {
id <- players_temp[player_row, "player_id"]
name <- players_temp[player_row, "player_name"] %>% str_to_lower() %>% str_replace_all(" ", "-")
URL <- paste0("https://index.rugbypass.com/rpi/", tournament, "/", team, "/", name)
# call player bio function
p_bio_tmp <- player_bio(URL)
p_bio_tmp <- as.data.frame(t(append(p_bio_tmp, id, 0)))
if(length(p_bio_tmp) == 1){
colnames(p_bio_tmp) <- "player_id"
} else {
colnames(p_bio_tmp) <- c("player_id", "position", "height_m", "weight_kg", "dob_ymd")
}
# collate rows
p_bio <- bind_rows(p_bio, p_bio_tmp)
}
p_bio$tournament_id <- as.list(df[tournament_row, "tournament_id"])
p_bio$team_id <- as.list(df[tournament_row, "team_id"])
p_bio$season <- as.list(df[tournament_row, "season"])
players_temp <- left_join(players_temp, p_bio, by = "player_id")
players <- rbind(players, players_temp)
}
# Cleaning
players <- players %>% select(season, tournament_id, team_id, player_id, player_name, position, dob_ymd, height_m, weight_kg)
players$tournament_id <- unlist(players$tournament_id)
players$team_id <- unlist(players$team_id)
players$season <- unlist(players$season)
players$weight_kg <- players$weight_kg %>% str_replace("kg", "")
players$height_m <- players$height_m %>% str_replace("m", "")
players <- na_if(players, "")
players <- na_if(players, "---")
players$height_m <- as.double(players$height_m)
players$weight_kg <- as.integer(players$weight_kg)
players$dob_ymd <- as.Date(players$dob_ymd, format = "%d %b %Y")
db_connection <- dbConnect(MySQL(), user="oli", password="zxc123", dbname="rugby_analysis", host="localhost")
dbWriteTable(db_connection, "tournaments", tournaments)
dbWriteTable(db_connection, "teams", teams)
dbWriteTable(db_connection, "players", players)
dbWriteTable(db_connection, "players", players)
View(df)
View(df)
df$season
View(p_bio_tmp)
source("rugby_pass_scrape_functions.R")
tmp <- get_player_data(df)
source("rugby_pass_scrape_functions.R")
tmp <- get_player_data(df)
source("rugby_pass_scrape_functions.R")
tmp <- get_player_data(df)
View(tmp)
View(tmp)
t <- dbReadTable(db_connection, "players")
t
