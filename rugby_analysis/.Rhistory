# away team
away_team <- rPassMatches_tmp %>% html_node("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim()
# away score
away_team_score <- rPassMatches_tmp %>% html_node("span.teams") %>% html_nodes("span.away") %>% html_text()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
print(rPassMatchesRounds %>% html_node("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(rPassMatchesRounds[round] %>% html_node("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_children())
}
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_attrs("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]"))
}
print(round %>% html_node("div[itemscope]") %>% html_attrs())
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% xml_find_all("data-id"))
}
print(round %>% html_node("div[itemscope]") %>% xml_find_all("//data-id"))
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% xml_find_all("//data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% xml_find_all(".//data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% xml_find_all(".//@data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% xml_find_all("@data-id"))
}
print(round %>% html_node("div[itemscope]") %>% html_nodes("data-id"))
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_nodes("data-id"))
}
print(round %>% html_node("div[itemscope]") %>% html_node("data-id"))
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_node("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_node("div.date-header"))
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_nodes("div.date-header"))
}
for(round in rPassMatchesRounds){
print(round %>% html_nodes("div.date-header"))
}
print(round %>% html_nodes("div.date-header") %>% html_text())
for(round in rPassMatchesRounds){
print(round %>% html_nodes("div.date-header") %>% html_text())
}
for(round in rPassMatchesRounds){
print(round %>% html_node("div[itemscope]") %>% html_text())
}
print(round %>% html_nodes("div[itemscope]") %>% html_text())
for(round in rPassMatchesRounds){
print(round %>% html_nodes("div[itemscope]") %>% html_text())
}
for(round in rPassMatchesRounds){
print(rPassMatches_tmp %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
# home team
print(round %>% html_node("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
# home team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
# home team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
# home score
print(round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text())
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
# home team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
# home score
print(round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text())
# away team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
}
for(round in rPassMatchesRounds){
# match id
print(round %>% html_nodes("div[itemscope]") %>% html_attr("data-id"))
# match date
print(round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content"))
# home team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
# home score
print(round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text())
# away team
print(round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text() %>% str_trim())
# away score
print(round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text())
}
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
}
match_date
match_id
cbind(match_id, match_date)
cbind(match_id, match_date, home_team, home_score, away_team, away_team_score)
fixture_results <- data.frame()
fixture_results %>% rbind() %>% cbind(match_id, match_date, home_team, home_score, away_team, away_team_score)
fixture_results %>% rbind(cbind(match_id, match_date, home_team, home_score, away_team, away_team_score))
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_team_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
View(fixture_results)
View(fixture_results)
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_team_score)
print(tmp)
}
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
print(tmp)
}
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
tmp
}
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
print(tmp)
}
rm(away_team_score)
rm(home_team_score)
rm(number_of_rounds)
rm(rPassMatches_tmp)
away_score
cbind(match_id, match_date, home_team, home_score, away_team, away_score)
is_empty(away_score)
if(is_empty(away_score)){
away_score <- vector(mode="character", length=2)
}
away_score
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
print(tmp)
}
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
class(fixture_results$match_id)
class(fixture_results$match_date)
class(fixture_results$home_team)
class(fixture_results$home_score)
class(fixture_results$away_team)
class(fixture_results$away_score)
fixture_results$away_score <- as.integer(fixture_results$away_score)
fixture_results$match_date
as_datetime(fixture_results$match_date)
as.POSIXlt(fixture_results$match_date, tz="nz")
as.POSIXct(fixture_results$match_date, tz="nz")
as.POSIXct(fixture_results$match_date, format = "%Y-%m-%d %H:%M:" , tz="nz")
as.POSIXct(fixture_results$match_date, format = "%Y-%m-%d %H:%M" , tz="nz")
as.POSIXct(strptime(fixture_results$match_date, "%Y-%m-%d %H:%M:%S"))
as.POSIXct(strptime(fixture_results$match_date, "%Y-%m-%d %H:%M"))
as.POSIXct(strptime(fixture_results$match_date))
as.IDate(fixture_results$match_date) # Output is "2012-03-07"
as.ITime(fixture_results$match_date) # Output is "03:06:49"
library(data.table)
as.ITime(fixture_results$match_date) # Output is "03:06:49"
as.IDate(fixture_results$match_date) # Output is "2012-03-07"
as.POSIXct(fixture_results$match_date, format = "%Y-%m-%d %H:%M" , tz="nz", usetz=TRUE)
as.POSIXct(fixture_results$match_date, format = "%Y-%m-%d %H:%M" , tz="nz")
as.POSIXct(fixture_results$match_date , tz="nz")
as_datetime(fixture_results$match_date , tz="nz")
as_datetime(fixture_results$match_date , tz="NZ")
fixture_results$match_date <- as_datetime(fixture_results$match_date , tz="NZ")
fixture_results$match_date
i.Date(fixture_results$match_date)
I.Date(fixture_results$match_date)
IDate(fixture_results$match_date)
as.IDate(fixture_results$match_date)
as.ITime(fixture_results$match_date)
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
fixture_results$home_score <- as.integer(fixture_results$home_score)
fixture_results$away_score <- as.integer(fixture_results$away_score)
fixture_results$match_date <- as_datetime(fixture_results$match_date , tz="NZ")
fixture_results$match_time <- as.ITime(fixture_results$match_date)
fixture_results$match_date <- as.IDate(fixture_results$match_date)
colnames(fixture_results)
fixture_results <- fixture_results %>% select(match_id, match_date, match_time, home_team, home_score, away_team, away_score)
library(data.table)
install.packages("data.table")
library(data.table)
install.packages("RMySQL")
library(robotstxt)
library(rvest)
library(selectr)
library(xml2)
library(dplyr)
library(stringr)
library(forcats)
library(magrittr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(tibble)
library(purrr)
library(RMySQL)
library(data.table)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Check if bots are allowed on website. If TRUE then okay to proceed
paths_allowed("https://www.rugbypass.com/super-rugby-aotearoa/matches/")
# Get html of rugby pass matches website
rPassMatches <- read_html("https://www.rugbypass.com/super-rugby-aotearoa/matches/")
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
fixture_results$home_score <- as.integer(fixture_results$home_score)
fixture_results$away_score <- as.integer(fixture_results$away_score)
fixture_results$match_date <- as_datetime(fixture_results$match_date , tz="NZ")
fixture_results$match_time <- as.ITime(fixture_results$match_date)
fixture_results$match_date <- as.IDate(fixture_results$match_date)
fixture_results <- fixture_results %>% select(match_id, match_date, match_time, home_team, home_score, away_team, away_score)
View(fixture_results)
View(fixture_results)
install.packages("RMySQL")
mysql_config
library(robotstxt)
library(xml2)
library(RMySQL)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Check if bots are allowed on website. If TRUE then okay to proceed
paths_allowed("https://www.rugbypass.com/super-rugby-aotearoa/matches/")
# Get html of rugby pass matches website
rPassMatches <- read_html("https://www.rugbypass.com/super-rugby-aotearoa/matches/")
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
library(rvest)
# Get html of rugby pass matches website
rPassMatches <- read_html("https://www.rugbypass.com/super-rugby-aotearoa/matches/")
fixture_results <- data.frame()
rPassMatchesRounds <- as.list(rPassMatches %>% html_nodes("div.games") %>% html_children())
for(round in rPassMatchesRounds){
match_id <- round %>% html_nodes("div[itemscope]") %>% html_attr("data-id")
match_date <- round %>% html_nodes("meta[itemprop=startDate]") %>% html_attr("content")
home_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=homeTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
home_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.home") %>% html_text(trim = TRUE)
away_team <- round %>% html_nodes("span.teams") %>%
html_node("span[itemprop=awayTeam]") %>% html_nodes("a.name") %>% html_text(trim = TRUE)
away_score <- round %>% html_nodes("span.teams") %>% html_nodes("span.away") %>% html_text(trim = TRUE)
if(is_empty(home_score)){
home_score <- vector(mode="character", length=length(match_id))
}
if(is_empty(away_score)){
away_score <- vector(mode="character", length=length(match_id))
}
tmp <- cbind(match_id, match_date, home_team, home_score, away_team, away_score)
fixture_results <- fixture_results %>% rbind(tmp)
}
Sys.getenv("MySQL_password")
db_connection <- dbConnect(MySQL(), user="root", password=Sys.getenv("MySQL_password"), host="localhost")
MySQL()
getwd()
install.packages(c("backports", "broom", "data.table", "ggplot2", "jsonlite", "pkgbuild", "ps", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
# Establish connection to database
db_connection <- dbConnect(MySQL(), user="oli")
library(RMySQL)
# Establish connection to database
db_connection <- dbConnect(MySQL(), user="oli")
# Read table
dbReadTable(db_connection, "information_schema")
View(db_connection)
db_connection
# Establish connection to database
db_connection <- dbConnect(MySQL(), user="oli", dbname="information_schema")
# Read table
dbReadTable(db_connection, "user_variables")
# Read table
dbReadTable(db_connection, "ALL_PLUGINS")
library(tidyverse)
# Read table
dbReadTable(db_connection, "ALL_PLUGINS") %>% class()
MySQL()
library(maptools)
install.packages("maptools")
file.choose()
plot(readShapeSpatial(file.choose()))
library(maptools)
plot(readShapeSpatial(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(st_read(file.choose()))
library(sf)
install.packages("sf")
install.packages("units")
install.packages("sf")
install.packages("units")
install.packages("sf")
library(maptools)
plot(st_read(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(readOGR(file.choose()))
install.packages("rgdal")
plot(readOGR(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(readShapeSpatial(file.choose()))
plot(readShapeSpatial(file.choose()))
